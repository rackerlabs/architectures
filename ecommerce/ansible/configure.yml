---
- name: Generating random hashes
  hosts: local
  connection: local
  gather_facts: False
  tasks:

    - name: Generate random Magento key
      shell: /usr/bin/openssl rand -base64 32
      register: magento_key_result

    - name: Generate random Redis key
      shell: /usr/bin/openssl rand -base64 32
      register: redis_key_result

- name: Deploy initial infrastructure
  hosts: local
  connection: local
  gather_facts: False
  vars_files:
    - vars.yml
  tasks:

    - name: Provision blueprint server
      rax:
        credentials: "{{ pyrax_creds_file }}"
        region: "{{ region }}"
        name: blueprint
        auto_increment: no
        flavor: "{{ server_flavor }}"
        image: "{{ server_image }}"
        key_name: "{{ server_keypair }}"
        wait: yes
        state: present
        group: blueprint
      register: rax_blueprint

    - name: Add blueprint server to host
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: blueprint
      with_items: rax_blueprint.success
      when: rax_blueprint.action == 'create'

    - name: Provision Redis server
      rax:
        credentials: "{{ pyrax_creds_file }}"
        region: "{{ region }}"
        name: redis
        auto_increment: no
        flavor: "{{ redis_flavor }}"
        image: "{{ redis_image }}"
        key_name: "{{ server_keypair }}"
        wait: yes
        state: present
        group: redis
      register: rax_redis

    - name: Add Redis server to host
      add_host:
        hostname: "{{ item.name }}"
        ansible_ssh_host: "{{ item.rax_accessipv4 }}"
        groupname: redis
      with_items: rax_blueprint.success
      when: rax_blueprint.action == 'create'

    - name: Provision DB instance
      rax_cdb:
        credentials: "{{ pyrax_creds_file }}"
        name: "{{ db_instance_name }}"
        flavor: "{{ db_flavor }}"
        volume: "{{ db_volume }}"
        state: present
        wait: yes
        region: "{{ region }}"
      register: cdb
      tags: database

    - name: Create DB
      rax_cdb_database:
        credentials: "{{ pyrax_creds_file }}"
        region: "{{ region }}"
        cdb_id: "{{ cdb.cdb.id }}"
        name: "{{ db_name }}"
      register: wp_db
      tags: database

    - name: Create DB user
      rax_cdb_user:
        credentials: "{{ pyrax_creds_file }}"
        region: "{{ region }}"
        cdb_id: "{{ cdb.cdb.id }}"
        db_username: "{{ db_user }}"
        db_password: "{{ db_password }}"
        databases: ["{{ db_name }}"]
      tags: database

- name: Deploy Redis
  hosts: redis
  remote_user: root
  vars:
    - redis_password: "{{ hostvars.localhost.redis_key_result.stdout_lines[0] }}"
    - redis_bind: 127.0.0.1
  roles:
    - { role: redis }

- name: Setup server
  hosts: blueprint
  remote_user: root
  vars:
    - server_hostname: "{{ hostvars.localhost.rax_blueprint.instances[0].rax_accessipv4 }}"
    - magento_key: "{{ hostvars.localhost.magento_key_result.stdout_lines[0] }}"
    - db_host: "{{ hostvars.localhost.cdb.cdb.hostname }}"
  vars_files:
    - vars.yml
  vars:
    rackspace_username: "{{ username }}"
    rackspace_apikey: "{{ api_key }}"
    cloud_monitoring_agent_force_setup: True
    cloud_monitoring_filesystem_alarm: True
    cloud_monitoring_cpu_alarm: True
    cloud_monitoring_memory_alarm: True
    cloud_monitoring_load_alarm: True
    notification_plan_id: "{{ lookup('file', 'roles/arch-deploy/files/.np_id') }}"
  roles:
    - { role: cloud-monitoring-agent, tags: ['monitoring'] }
    - { role: nginx }
    - { role: php-fpm }
    - { role: magento }
